<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.board.repository.board.BoardMapper">
    <select id="findAllCategoryNames" resultType="String">
        SELECT name
        FROM category;
    </select>

    <select id="findSmallBySearchCondition" resultType="com.study.board.dto.BoardDTO">
        SELECT b.board_id AS boardId,
        c.name AS category,
        b.writer,
        b.title,
        b.views,
        b.created_date AS generationTimestamp,
        b.modified_date AS modificationTimestamp,
        count(f.board_id) AS fileCount
        FROM board b
        LEFT JOIN category c
        ON c.category_id = b.category_id
        LEFT JOIN file f
        ON f.board_id = b.board_id
        <![CDATA[WHERE b.created_date >= #{startDate} AND b.created_date <= #{endDate}]]>
        <if test="search != null">
            AND (b.title LIKE CONCAT('%', #{search}, '%') OR
            b.writer LIKE CONCAT('%', #{search}, '%') OR
            b.content LIKE CONCAT('%', #{search}, '%'))
        </if>
        <if test="category != null">
            <if test="category != 'all'">
                AND c.name = #{category}
            </if>
        </if>
        GROUP BY b.board_id, c.name, b.writer, b.title, b.views, b.created_date, b.modified_date
        ORDER BY b.board_id DESC
        LIMIT #{limit} OFFSET #{page}
    </select>

    <select id="countBySearchCondition" resultType="Integer">
        SELECT COUNT(board_id)
        FROM board b
        <![CDATA[WHERE b.created_date >= #{startDate} AND b.created_date <= #{endDate}]]>
        <if test="search != null">
            AND (b.title LIKE CONCAT('%', #{search}, '%') OR
            b.writer LIKE CONCAT('%', #{search}, '%') OR
            b.content LIKE CONCAT('%', #{search}, '%'))
        </if>
        <if test="category != null">
            <if test="category != 'all'">
                AND b.category_id = (SELECT category_id FROM category WHERE name = #{category})
            </if>
        </if>
    </select>

    <select id="findAllCategories" resultType="Category">
        SELECT category_id AS categoryId, name
        FROM category
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO board (category_id, writer, title, password, content, created_date, views)
        VALUES (#{categoryId}, #{writer}, #{title}, #{password}, #{content}, #{generationTimestamp}, 0)
    </insert>

    <select id="findDetailByBoardId" resultType="com.study.board.dto.BoardDTO">
        SELECT c.name          AS category,
               b.title,
               b.writer,
               b.content,
               b.views,
               b.created_date  AS generationTimestamp,
               b.modified_date AS modificationTimestamp
        FROM board b
                 LEFT JOIN category c
                           ON c.category_id = b.category_id
        WHERE board_id = #{boardId}
    </select>

    <update id="addOneToViews">
        UPDATE board
        SET views = views + 1
        WHERE board_id = #{board_id}
    </update>

    <select id="findPasswordByBoardId" resultType="String">
        SELECT password
        FROM board
        WHERE board_id = #{boardId}
    </select>

    <delete id="deleteByBoardId">
        DELETE
        FROM board
        WHERE board_id = #{boardId}
    </delete>

    <select id="findDTOForModificationByBoardId" resultType="com.study.board.dto.BoardDTO">
        SELECT c.name          AS category,
               b.created_date  AS generationTimestamp,
               b.modified_date AS modificationTimestamp,
               b.views,
               b.writer,
               b.title,
               b.content
        FROM board b
                 LEFT JOIN category c
                           ON c.category_id = b.category_id
        WHERE b.board_id = #{boardId}
    </select>

    <update id="modifyBoardByBoardModifyDTO">
        UPDATE board
        SET writer        = #{boardModifyDTO.writer},
            title         = #{boardModifyDTO.title},
            content       = #{boardModifyDTO.content},
            modified_date = #{boardModifyDTO.modificationTimestamp}
        WHERE board_id = #{boardId}
    </update>
</mapper>